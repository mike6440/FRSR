#! /usr/bin/perl -X
#use strict; use warnings;

#========== FRSR V3 ===============================================================
#Call: ./InterpFrsrPacket.pl 

use lib "$ENV{DAQLIB}";
use perltools::MRtime;
use Time::HiRes ('sleep');

my ($pktlen,$cc,$packetid,$mode,$shadow,$shadowthreshold,$ix,$i,$i1,$hms,$dmy);
my (@g1,@g2,@sw, $strin, $lat,$lon,$sog,$cog,$strgps,@w,$outpkt, $outfile);
$strin=shift();
$strin =~ s/^\s+//;
$strin =~ s/\s+$//;
$outfile=shift();
	# Locate the last checksum *
$i1 = 0;
while ( 1 ){
  $i = index($strin, "*", $i1);
  last if ( $i < 0 );
  $ix=$i;
  $i1=$i+1;
}
	# fix chksums with missing 0, e.g. convert *6 -> *06
$i1=length($strin);
if($i1-$ix == 3){
	$strin=substr($strin,0,$ix+3);
}else{
	$strin=substr($strin,0,$ix+1).'0'.substr($strin,-1,1);
}
	# TEST LENGTH
$pktlen=length($strin);
$#sw = 23 * 7;
	## CHKSUM TEST
$cc = NmeaChecksum( substr($strin,0,-2) );
#printf"chksum=%s\n",substr($strin,-2);
#printf"computed chksum=%s\n", $cc;
if ($cc ne substr($strin,-2)) {
	print"Checksum fails, skip\n";
} else {
	$ichar=7;
		# Mode
	$mode=substr($strin,$ichar,1);
	$outpkt = sprintf"$mode";
		# GPS time lat lon sog cog
		#<<$GPRMC,182428,A,3551.0228,N,10616.3582,W,000.0,239.4,280517,>>
	$i=index($strin,'<<');
	$i1=index($strin,'>>');
	if($i1-$i < 20){
			# No GPS
		$dtgps=now();
		$lat=45; $lon=-122; $sog=0; $cog=0;
	}else{
		$strgps=substr($strin,$i+9,$i1-$i-10);
		#print"\nstrgps=$strgps\n";
		@w=split /[, ]+/g, $strgps;
		#$ii=0;foreach(@w){print"$ii, $_\n"; $ii++;}
		$hms=$w[0];
		$dmy=$w[8];
		$dtgps=datesec(substr($dmy,4,2)+2000,substr($dmy,2,2),substr($dmy,0,2),substr($hms,0,2),substr($hms,2,2),substr($hms,4,2));
		$lat=substr($w[2],0,-7) + substr($w[2],-7)/60;if($w[3] eq 'S'){$lat=-$lat}
		$lon=substr($w[4],0,-7) + substr($w[4],-7)/60;if($w[5] eq 'W'){$lon=-$lon}
		$sog=$w[6];  $cog=$w[7];
	}
	$outpkt = $outpkt.sprintf", %s,  %.5f, %.5f, %.1f, %.1f",dtstr($dtgps,'csv'),$lat,$lon,$sog,$cog;
	$ichar=$i1+3;
		# T1,T2
	$T1 = DecodePsuedoAscii2( substr($strin,$ichar,2) )/10-20;
	$ichar+=2;
	$T2 = DecodePsuedoAscii2( substr($strin,$ichar,2) )/10-20;
	$ichar+=3;
	$outpkt = $outpkt.sprintf", %.1f, %.1f",$T1,$T2;
		# pitch1, pitch2
	$pitch1 = DecodePsuedoAscii2( substr($strin,$ichar,2) )/100-20;
	$ichar+=2;
	$pitch2 = DecodePsuedoAscii2( substr($strin,$ichar,2) )/100-20;
	$ichar+=3;
	$outpkt = $outpkt.sprintf", %.2F, %.2f",$pitch1,$pitch2;
		# roll1, roll2
	$roll1 = DecodePsuedoAscii2( substr($strin,$ichar,2) )/100-20;
	$ichar+=2;
	$roll2 = DecodePsuedoAscii2( substr($strin,$ichar,2) )/100-20;
	$ichar+=3;
	$outpkt = $outpkt.sprintf", %.2f, %.2f",$roll1,$roll2;
		# global 1
	$ix=$ichar;
	for($i=0; $i<7; $i++){
		push(@g1,DecodePsuedoAscii2( substr($strin,$ix,2) ) );
		$ix+=2;
	}
		# global 2
	$ichar+=15;
	$ix=$ichar;
	for($i=0; $i<7; $i++){
		push(@g2,DecodePsuedoAscii2( substr($strin,$ix,2) ) );
		$ix+=2;
	}
		# shadow, limit
	$ichar+=15;
	$shadow = DecodePsuedoAscii2( substr($strin,$ichar,2) )/10;
	$ichar+=2;
	$shadowthreshold = DecodePsuedoAscii2( substr($strin,$ichar,2) )/10;
	$ichar+=3;
	$outpkt = $outpkt.sprintf", %.1f,  %.1f\n",$shadow,$shadowthreshold;
		# Print Globals
	for($i=0; $i<7; $i++){
		$outpkt = $outpkt.sprintf"$g1[$i]  ";
	}  $outpkt = $outpkt.sprintf"\n";
	for($i=0; $i<7; $i++){
		$outpkt = $outpkt.sprintf"$g2[$i]  ";
	}  $outpkt = $outpkt.sprintf"\n";
	# HIGH - SHADOW
	if($pktlen>300){
		# Sweep chan 0
		$ix=$ichar; # first character
		for($ia=0; $ia<7; $ia++){
			for($ib=0; $ib<23; $ib++){
				$ic = $ia*23 + $ib; # array index
				$sw[$ic] = DecodePsuedoAscii2( substr($strin,$ix,2) );
				$ix+=2;
			}
			$ix++; # skip the comma
		}
		# print out sweeps
		for($ia=0; $ia<7; $ia++){
			for($ib=0; $ib<23; $ib++){
				$ic = $ia*23 + $ib; # array index
				$outpkt = $outpkt.sprintf"$sw[$ic] ";
			}
			$outpkt = $outpkt.sprintf"\n";
		}
	}
	#print"$outpkt";
	open F,">>$outfile" or die;
	print F $outpkt;
	close F;
		# delay a bit for the full string to be sent.
	sleep(.05); # 50 ms to complete transfer. This is bull shit.
}
exit 0;

#=========================================================
#$GPRMC,190824,A,4737.0000,S,12300.0000,W,002.1,202.0,210210,019.0,W*62
sub NmeaChecksum
# $cc = NmeaChecksum($str) where $str is the NMEA string that starts with '$' and ends with '*'.
{
    my ($line) = @_;
    my $csum = 0;
    $csum ^= unpack("C",(substr($line,$_,1))) for(1..length($line)-2);
    return (sprintf("%2.2X",$csum));
}
#==========================================================================
sub DecodePsuedoAscii2
# input = 2 p.a. chars   output = decimal number
{
	my ($strin,$c1,$c2,$b1,$b2,$x);
	$strin=shift();
	#printf"In string = $strin  ";
	$c1 = substr($strin,0,1);
	$c2 = substr($strin,1,1);
	$b1 = ord( $c1 ) - 48;
	$b2 = ord($c2) - 48;
	$x = $b2*64+$b1;
	#print"  decode = $x\n";
	return $x;
}

